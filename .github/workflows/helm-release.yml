name: Helm Chart Release

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'deployments/**'
  #     - '.VERSION'
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-and-publish-helm-chart:
    name: Build and Publish Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to update Chart.yaml and commit it (if we choose to commit) and for creating releases
      packages: write # Needed to push Helm chart to GHCR or other OCI registries
      id-token: write # Needed for OIDC if used for cloud provider auth

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5 

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Read version from .VERSION file
        id: version
        run: echo "APP_VERSION=$(grep 'version:' .VERSION | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT

      - name: Update Chart.yaml
        run: |
          CHART_PATH="deployments/kubernetes/chart/gitwebhookproxy/Chart.yaml"
          NEW_VERSION="${{ steps.version.outputs.APP_VERSION }}"
          sed -i "s/^version: .*/version: $NEW_VERSION/" "$CHART_PATH"
          sed -i "s/^appVersion: .*/appVersion: $NEW_VERSION/" "$CHART_PATH"
          echo "::notice::Updated Chart.yaml to version $NEW_VERSION, chart path: $CHART_PATH"

      - name: Commit Chart.yaml changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Update Helm chart version to ${{ steps.version.outputs.APP_VERSION }} [skip ci]"
          file_pattern: deployments/kubernetes/chart/gitwebhookproxy/Chart.yaml

      - name: Package Helm Chart
        run: |
          mkdir -p ./helm-charts
          helm package ./deployments/kubernetes/chart/gitwebhookproxy --destination ./helm-charts

      - name: Login to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Helm Chart to Docker Hub OCI Registry
        run: |
          CHART_NAME="gitwebhookproxy" # This should match the name in your Chart.yaml
          CHART_VERSION="${{ steps.version.outputs.APP_VERSION }}"
          OCI_REGISTRY_PATH="oci://docker.io/${{ vars.DOCKER_REPOSITORY }}/gitwebhookproxy"
          
          # The packaged chart file will be something like ./helm-charts/gitwebhookproxy-0.1.0.tgz
          # Adjust based on actual chart name and versioning.
          helm push "./helm-charts/${CHART_NAME}-${CHART_VERSION}.tgz" "${OCI_REGISTRY_PATH}"
          echo "Pushed Helm chart ${CHART_NAME}-${CHART_VERSION}.tgz to ${OCI_REGISTRY_PATH}"

      - name: Create GitHub Release for Helm Chart
        if:  github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: helm-v${{ steps.version.outputs.APP_VERSION }}
          name: Helm Chart Release v${{ steps.version.outputs.APP_VERSION }}
          body: "Helm chart for GitWebhookProxy version ${{ steps.version.outputs.APP_VERSION }}"
          draft: false
          prerelease: false
          files: |
            ./helm-charts/${CHART_NAME}-${{ steps.version.outputs.APP_VERSION }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
